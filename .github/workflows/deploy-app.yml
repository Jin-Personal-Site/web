name: Deploy NextJS with SSM and RDS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Bun
        run: npm install -g bun

      - name: Install dependencies
        run: bun install

      - name: Trust all dependencies
        run: bun pm trust --all

      - name: Generate Prisma schema types
        run: bun db:generate

      - name: Start SSM and forward RDS to localhost:5432
        run: |
          aws ssm start-session \
            --target ${{ vars.SSM_INSTANCE_ID }} \
            --document-name AWS-StartPortForwardingSessionToRemoteHost \
            --parameters '{"host":["${{ vars.RDS_URL }}"],"portNumber":["${{ vars.RDS_PORT }}"], "localPortNumber":["5432"]}' > ssm.log 2>&1 &
          echo $! > ssm_pid.txt
          # Wait for port forwarding to be established
          sleep 5

      - name: Build NextJS app
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/personal_site
        run: bun run build

      - name: Stop SSM session
        run: |
          session_id=$(aws ssm describe-sessions --state Active --query "Sessions[?Target=='${{ vars.SSM_INSTANCE_ID }}'].SessionId" --output text)
          if [ ! -z "$session_id" ]; then
            for session in $session_id; do
              aws ssm terminate-session --session-id "$session"
            done
          fi

      - name: Upload built output to S3
        run: |
          aws s3 sync ./out s3://jin-personal-site/web --delete

